# Generated by Django 3.1.4 on 2021-01-27 22:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('language', '0003_auto_20210120_0148'),
        ('library', '0003_auto_20210127_2054'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the book.', max_length=100, verbose_name='Book Name')),
                ('description', models.TextField(blank=True, help_text='Description about the book.', verbose_name='Description')),
                ('year', models.DateField(blank=True, help_text='Year of the publishing the book.', null=True, verbose_name='Publish Year')),
                ('edition_number', models.IntegerField(blank=True, help_text='Number of the book edition.', null=True, verbose_name='Edition Number')),
                ('volume', models.IntegerField(blank=True, help_text='Number of the book volume.', null=True, verbose_name='Volume Number')),
                ('part', models.IntegerField(blank=True, help_text='Number of the book part.', null=True, verbose_name='Part Number')),
                ('page_quantity', models.IntegerField(help_text='Quantity of the book pages.', verbose_name='Page Quantity')),
                ('is_copyright', models.BooleanField(default=False, help_text='For determine if the book is copyrighted ', verbose_name='Is copyright?')),
                ('image', models.ImageField(default='default_book.jpg', help_text='Picture of the book.', upload_to='book_pics', verbose_name='Image')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Created Timestamp')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='books', related_query_name='book', to=settings.AUTH_USER_MODEL, verbose_name='Creator Id')),
                ('genres', models.ManyToManyField(related_name='books', related_query_name='book', to='library.Genre', verbose_name='Genre Id')),
                ('languages', models.ManyToManyField(related_name='books', related_query_name='book', to='language.Language', verbose_name='Language Id')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='books', related_query_name='book', to='library.location', verbose_name='Location Id')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='books', related_query_name='book', to='library.publisher', verbose_name='Publisher Id')),
            ],
            options={
                'verbose_name': 'book',
                'verbose_name_plural': 'books',
            },
        ),
        migrations.CreateModel(
            name='BookHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the book.', max_length=100, verbose_name='Book Name')),
                ('description', models.TextField(blank=True, help_text='Description about the book.', verbose_name='Description')),
                ('year', models.DateField(blank=True, help_text='Year of the publishing the book.', null=True, verbose_name='Publish Year')),
                ('edition_number', models.IntegerField(blank=True, help_text='Number of the book edition.', null=True, verbose_name='Edition Number')),
                ('volume', models.IntegerField(blank=True, help_text='Number of the book volume.', null=True, verbose_name='Volume Number')),
                ('part', models.IntegerField(blank=True, help_text='Number of the book part.', null=True, verbose_name='Part Number')),
                ('page_quantity', models.IntegerField(blank=True, help_text='Quantity of the book pages.', null=True, verbose_name='Page Quantity')),
                ('is_copyright', models.BooleanField(default=False, help_text='For determine if the book is copyrighted ', verbose_name='Is copyright?')),
                ('image', models.ImageField(default='default_book.jpg', help_text='Picture of the book.', upload_to='book_pics', verbose_name='Image')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Created Timestamp')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_histories', related_query_name='book_history', to='library.book', verbose_name='Location Id')),
                ('editor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='book_histories', related_query_name='book_history', to=settings.AUTH_USER_MODEL, verbose_name='Editor Id')),
                ('genres', models.ManyToManyField(related_name='book_histories', related_query_name='book_history', to='library.Genre', verbose_name='Genre Id')),
                ('languages', models.ManyToManyField(related_name='book_histories', related_query_name='book_history', to='language.Language', verbose_name='Language Id')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='book_histories', related_query_name='book_history', to='library.location', verbose_name='Location Id')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='book_histories', related_query_name='book_history', to='library.publisher', verbose_name='Publisher Id')),
            ],
            options={
                'verbose_name': 'book history ',
                'verbose_name_plural': 'book histories',
            },
        ),
        migrations.CreateModel(
            name='BookWriterHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.bookhistory')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.job')),
                ('writer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.writer')),
            ],
        ),
        migrations.CreateModel(
            name='BookWriter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.job')),
                ('writer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.writer')),
            ],
        ),
        migrations.AddField(
            model_name='bookhistory',
            name='writers',
            field=models.ManyToManyField(related_name='book_histories', related_query_name='book_history', through='library.BookWriterHistory', to='library.Writer', verbose_name='Writer Id'),
        ),
        migrations.AddField(
            model_name='book',
            name='writers',
            field=models.ManyToManyField(related_name='books', related_query_name='book', through='library.BookWriter', to='library.Writer', verbose_name='Writer Id'),
        ),
    ]
